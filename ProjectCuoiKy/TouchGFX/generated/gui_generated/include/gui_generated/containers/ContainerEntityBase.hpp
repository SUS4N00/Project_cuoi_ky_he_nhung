/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CONTAINERENTITYBASE_HPP
#define CONTAINERENTITYBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class ContainerEntityBase : public touchgfx::Container
{
public:
    ContainerEntityBase();
    virtual ~ContainerEntityBase();
    virtual void initialize();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::FadeAnimator< touchgfx::Image > avatar;
    touchgfx::Image heart;
    touchgfx::TextAreaWithOneWildcard textHP;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > textDamTaken;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTHP_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textHPBuffer[TEXTHP_SIZE];
    static const uint16_t TEXTDAMTAKEN_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textDamTakenBuffer[TEXTDAMTAKEN_SIZE];

private:

};

#endif // CONTAINERENTITYBASE_HPP
